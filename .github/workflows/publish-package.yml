name: Publish to npm and GitHub Packages

on:
  push:
    branches:
      - main
    paths:
      - "projects/ng-text-highlight/**"
      - ".github/**"
      - "scripts/patch-package-json-github.js"

jobs:
  ci:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.set-node-version.outputs.node }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Upload Build Scripts
        uses: actions/upload-artifact@v4
        with:
          name: build-scripts
          path: scripts/

      - name: Set Node Version Output
        id: set-node-version
        run: echo "node=22.14.0" >> $GITHUB_OUTPUT

  build:
    name: Build Library and App
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Build library and app
        run: |
          npm run build:library
          npm run build:prod

      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: ng-text-highlight-dist
          path: dist/ng-text-highlight/

  unit-test:
    name: Run Unit Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: echo "Running unit tests..."

  npm-publish:
    name: Publish to npm
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: ng-text-highlight-dist
          path: dist/ng-text-highlight/

      - name: Authenticate with npm
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Publish Library to npm
        run: |
          cd dist/ng-text-highlight
          PKG_NAME=$(node -p "require('./package.json').name")
          PKG_VERSION=$(node -p "require('./package.json').version")

          echo "Checking if version $PKG_VERSION of $PKG_NAME already exists on npm..."

          if npm view "$PKG_NAME@$PKG_VERSION" > /dev/null 2>&1; then
            echo "::warning ::Version $PKG_VERSION of $PKG_NAME already exists. Skipping publish."
          else
            npm publish
          fi

  github-publish:
    name: Publish to GitHub Packages
    needs: unit-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: ng-text-highlight-dist
          path: dist/ng-text-highlight/

      - name: Download Build Scripts
        uses: actions/download-artifact@v4
        with:
          name: build-scripts
          path: scripts/

      - name: Patch package.json for GitHub Packages
        run: npm run patch-package-github

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"
          registry-url: "https://npm.pkg.github.com/"
          scope: "@supriyakundu99"

      - name: Publish to GitHub Packages
        run: |
          cd dist/ng-text-highlight
          PKG_NAME=$(node -p "require('./package.json').name")
          PKG_VERSION=$(node -p "require('./package.json').version")

          echo "Checking if version $PKG_VERSION of $PKG_NAME already exists on GitHub Packages..."

          if npm view "$PKG_NAME@$PKG_VERSION" --registry=https://npm.pkg.github.com/ > /dev/null 2>&1; then
            echo "::warning ::Version $PKG_VERSION of $PKG_NAME already exists. Skipping publish."
          else
            npm publish
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  end:
    name: âœ… Completed
    needs: [npm-publish, github-publish]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Pipeline completed successfully!"
